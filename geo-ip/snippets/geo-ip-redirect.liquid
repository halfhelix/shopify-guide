{% comment %}

  GEO IP Redirect

  Place in header to redirect before loading all of the site's assets

  NOTE: we are not trying to force a synchronous call since this is no longer supported in most major browsers

  To emulate a synchronous call, we put a 'cover' div over the site while the redirect script is running.
  The cover div is removed once the redirect script is complete,
  and the site is revealed

  Dependencies: jQuery, jquery.cookie.js

  Related snippets: geo-ip-redirect-switcher.liquid, geo-ip-redirect-cover.liquid

{% endcomment %}
{% if settings.comet_geoip_enabled %}
{% assign comet_geoip_secondary_codes = settings.comet_geoip_secondary_codes | split: ',' %}
{% assign comet_geoip_whitelist = settings.comet_geoip_whitelist | split: ',' %}
<script id="comet-geo-ip-redirect">
(function($, NaN, undefined) {
  'use strict';

  {% comment %}
    helper methods
  {% endcomment %}
  var contains = function(str, substr) {
    return str.indexOf(substr) !== -1;
  };

  var called = false;
  var primaryDomain = '{{ settings.comet_geoip_primary_domain }}';
  var secondaryDomain = '{{ settings.comet_geoip_secondary_domain }}';
  var isPrimary = {{ settings.comet_geoip_isprimary }};
  {% if settings.comet_geoip_isprimary %}
    var storeCode = '{{ settings.comet_geoip_primary_name | handleize }}';
  {% else %}
    var storeCode = '{{ settings.comet_geoip_secondary_name | handleize }}';
  {% endif %}
  var fallbackDelay = parseInt('{{ settings.comet_geoip_fallbackdelay }}', 10);
  var redirectToRoot = {{ settings.comet_geoip_redirecttoroot }};
  var storeSwitcherEnabled = {{ settings.comet_geoip_storeswitcher }} && $.cookie;
  var domainHandle = location.hostname.replace(/\./g, '-') + '-';
  var cookieName = 'comet-geoip-' + domainHandle + storeCode;
  var geoIPService = '{{ settings.comet_geoip_service }}';
  var coverID = '#comet-geo-ip-redirect-cover';
  var selectID = '#comet-geo-ip-redirect-switcher-select';
  var rightDomain;
  var wrongDomain;
  var secondaryCodes = [
    {% for cc in comet_geoip_secondary_codes %}'{{ cc }}'{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ];
  var whitelist = [
    {% for w in comet_geoip_whitelist %}'{{ w }}'{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ];

  {% comment %} Variable sanitization {% endcomment %}
  if (fallbackDelay === NaN) {
    fallbackDelay = 5000;
  }
  
  {% comment %}

    Run this function
    when the Geo IP service returns successfully
    check which country the user is in,
    and redirect to the appropriate country 
    and also take into account
    whether or not the store switcher is in use
    and therefore if we should override the geo ip or not
    we can override the geo ip manually by just adding a hash
    with the store code we want
    in the url
    example: my-eu-store.com/#europe
    will keep you on the EU store
    even if you're not in europe
    also, don't do a redirect if the current url is whitelisted in the theme settings

  {% endcomment %}
  function onSuccess(loc) {
    var currentPath = location.pathname;
    var urlIsWhitelisted = false;
    var $cover;
    var $select;
    var inSecondary;
    var atWrongSite;
    var newLoc;

    called = true;

    $cover = $(coverID);
    $select = $(selectID);

    if (loc) {
      inSecondary = $.inArray(loc.country_code, secondaryCodes) > -1;
      {% if settings.comet_geoip_isprimary %}
        atWrongSite = inSecondary;
        rightDomain = secondaryDomain;
        wrongDomain = primaryDomain;
      {% else %}
        atWrongSite = !inSecondary;
        rightDomain = primaryDomain;
        wrongDomain = secondaryDomain;
      {% endif %}
    }

    $(whitelist).each(function(i, whitelistPath) {
      if (contains(currentPath, whitelistPath)) {
        urlIsWhitelisted = true;
      }
    });

    if (loc && (atWrongSite && !urlIsWhitelisted && location.hash !== '#' + storeCode{% if settings.comet_geoip_storeswitcher %} && $.cookie(cookieName) !== storeCode{% endif %})) {
      {% if settings.comet_geoip_redirecttoroot %}
        window.location.href = '//' + rightDomain;
      {% else %}
        newLoc = window.location.href.replace(window.location.hash, '');
        newLoc = newLoc.replace(wrongDomain, rightDomain);
        window.location.href = newLoc;
      {% endif %}
    } else {
      if ($cover.length) {
        $cover.remove();
      } else {
        $(function() {
          $(coverID).remove();
        });
      }
      if (storeSwitcherEnabled) {
        $.cookie(cookieName, storeCode, { path: '/' });
        if ($select.length) {
          $select.val('#' + storeCode);
        } else {
          $(function() {
            $(selectID).val('#' + storeCode);
          });
        }
      }
    }
  }

  {% comment %}

    call the Geo IP service

  {% endcomment %}
  $.ajax({ 
    url: geoIPService, 
    type: 'GET', 
    dataType: 'jsonp',
    success: onSuccess
  });

  {% comment %}

    If the call to the Geo IP is taking too long,
    and possibly failing,
    just run the callback anyway
    and reveal the website
    so its not just a blank screen for the user

  {% endcomment %}
  setTimeout(function() {
    if (!called) {
      onSuccess();
    }
  }, fallbackDelay);
})(jQuery, parseInt({}), void(0));
</script>
{% endif %}